service: proxy-notification-receiver

provider:
  name: aws
  runtime: ruby2.5
  region: ap-northeast-1
  profile: dc-serps
  stackName: proxy-notification-receiver
  memorySize: 128
  timeout: 10
  logRetentionInDays: 7
  deploymentBucket:
    name: jp.speee.dc-dev.serposcope-serverless
  role: myDefaultRole

usagePlan:
  throttle:
    rateLimit: 100

package:
  exclude:
    - .gitignore
events:
  - cloudwatchLog:
    logGroup: /aws/lambda/${self:service}

functions:
  receiver:
    name: ${self:service}
    handler: handler.lambda_handler
    vpc:
      securityGroupIds:
        - sg-08e5c3bc5c8e863c9
      subnetIds:
        - subnet-075ecc53105e42206
    environment:
      SERPOSCOPE_HOST: serposcope.cluster-cndvdgoirjyt.ap-northeast-1.rds.amazonaws.com
    # package:
    #   include:
    #     handler.js
    #     Gemfile
    #     Gemfile.lock
    #     vender/**

resources:
  Resources:
    myDefaultRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: lambda-proxy-notification-receiver-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ambda-proxy-notification-receiver-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - ec2:DescribeInstances
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - secretsmanager:GetSecretValue
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - kms:Decrypt
                  Resource: '*'
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
